{"version":3,"sources":["components/SearchResult.js","App.js","index.js"],"names":["SearchResult","state","isExpanded","openModal","_this","setState","closeModal","react_default","a","createElement","Modal","basic","closeIcon","trigger","Image","alt","this","props","bordered","href","url","key","open","onClose","rel","src","thumbnail","target","wrapped","Header","Content","Grid","Column","width","onClick","onExpand","image","size","Button","as","inverted","Component","App","activePage","inputError","isFetching","isLoading","numPages","recentSearches","resultsReturned","safeSearch","searchResults","suggestedSearches","searchTerm","getSearchHistory","axios","get","then","res","data","length","reverse","catch","err","console","log","handleChange","e","_ref","_this$setState","name","value","Object","defineProperty","handleSubmit","lastSearch","pages","paginate","_ref2","searchRecent","toggle","_this2","style","minHeight","minWidth","padding","Container","color","textAlign","fontFamily","fontSize","Segment","vertical","Form","onSubmit","Field","Input","fluid","error","onChange","placeholder","Group","inline","Checkbox","checked","label","Message","List","horizontal","slice","map","search","i","search_term","Item","Pagination","firstPage","lastPage","onPageChange","totalPages","Loader","active","Fragment","result","components_SearchResult","firstItem","lastItem","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a1faab54.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Image,\n  Grid,\n  Segment,\n  Header,\n  Icon,\n  Modal,\n  Button,\n  Divider\n} from \"semantic-ui-react\";\n\nclass SearchResult extends Component {\n  state = {\n    isExpanded: false\n  };\n\n  openModal = () => {\n    this.setState({ isExpanded: true });\n  };\n\n  closeModal = () => this.setState({ isExpanded: false });\n\n  render() {\n    return (\n      <Modal\n        basic\n        closeIcon\n        trigger={\n          <Image\n            alt={this.props.alt}\n            bordered\n            href={this.props.url}\n            key={this.props.url}\n            open={this.state.isExpanded}\n            onClose={this.closeModal}\n            rel=\"noopener noreferrer\"\n            src={this.props.thumbnail}\n            target={\"blank\"}\n            wrapped\n          />\n        }\n      >\n        <Modal.Header>{this.props.alt}</Modal.Header>\n        <Modal.Content>\n          <Grid>\n            <Grid.Column width={10}>\n          <Image\n            alt={this.props.alt}\n            href={this.props.url}\n            key={this.props.url}\n            onClick={this.onExpand}\n            rel=\"noopener noreferrer\"\n            src={this.props.image}\n            target={\"blank\"}\n            wrapped\n            size={\"large\"}\n          />\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Button\n                as=\"a\"\n                href={this.props.url}\n                onClick={this.closeModal}\n                target={\"blank\"}\n                rel={\"noopener noreferrer\"}\n                inverted\n              >\n                Visit Page\n              </Button>\n              <Button\n                as=\"a\"\n                href={this.props.thumbnail}\n                onClick={this.closeModal}\n                target=\"blank\"\n                rel=\"noopener noreferrer\"\n                inverted\n              >\n                View Image\n              </Button>\n            </Grid.Column>\n          </Grid>\n          {/*<Divider />*/}\n          {/*<Modal.Description>*/}\n          {/*  <Button*/}\n          {/*    as=\"a\"*/}\n          {/*    href={this.props.url}*/}\n          {/*    onClick={this.closeModal}*/}\n          {/*    target={\"blank\"}*/}\n          {/*    rel={\"noopener noreferrer\"}*/}\n          {/*    primary*/}\n          {/*    inverted*/}\n          {/*  >*/}\n          {/*    Visit Page*/}\n          {/*  </Button>*/}\n          {/*  <Button*/}\n          {/*    as=\"a\"*/}\n          {/*    href={this.props.thumbnail}*/}\n          {/*    onClick={this.closeModal}*/}\n          {/*    target=\"blank\"*/}\n          {/*    rel=\"noopener noreferrer\"*/}\n          {/*    primary inverted*/}\n          {/*  >*/}\n          {/*    View Image*/}\n          {/*  </Button>*/}\n          {/*</Modal.Description>*/}\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default SearchResult;\n","import React, { Component } from \"react\";\nimport { Checkbox, Container, Form, Header, Image, List, Loader, Message, Pagination, Segment } from \"semantic-ui-react\";\nimport SearchResult from './components/SearchResult';\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    activePage: 1,\n    inputError: false,\n    isFetching: false,\n    isLoading: true,\n    numPages: \"\",\n    recentSearches: [],\n    resultsReturned: false,\n    safeSearch: false,\n    searchResults: [],\n    suggestedSearches: '',\n    searchTerm: \"\"\n  };\n\n  componentWillMount() {\n    this.getSearchHistory();\n  }\n\n  getSearchHistory = () => {\n    axios\n      .get(\"/api/history\")\n      .then(res => {\n        if (res.data.length < 1) {\n          this.getSearchHistory();\n        } else {\n          return this.setState({\n            recentSearches: res.data.reverse(),\n            isLoading: false\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Search input handler\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value, inputError: false });\n  };\n\n  // Search for new term or next page of results\n  handleSubmit = () => {\n    if (this.state.searchTerm === '') {\n      this.setState({inputError: true})\n      return;\n    }\n    // Set active page to 1 if new search term is entered\n    if (this.state.searchTerm !== this.state.lastSearch) {\n      this.setState({ activePage: 1 });\n    }\n\n    // Set component state for fresh search results\n    this.setState({ isFetching: true, searchResults: [] });\n\n    let safeSearch = this.state.safeSearch ? \"moderate\" : \"off\";\n    // query the search API\n    axios\n      .get(\n        \"/api/search/\" +\n        this.state.searchTerm +\n        \"?offset=\" +\n        this.state.activePage +\n        \"&safeSearch=\" +\n        safeSearch\n      )\n      .then(res =>\n        this.setState({\n          isFetching: false,\n          searchResults: res.data.searchResults,\n          numPages: res.data.pages,\n          lastSearch: this.state.searchTerm,\n          resultsReturned: true\n        })\n      )\n      .catch(err => console.log(err));\n    this.getSearchHistory()\n  };\n\n  // Paginate search results\n  paginate = (e, { activePage }) => {\n    this.setState({ activePage }, () => this.handleSubmit());\n  };\n\n  searchRecent = e => {\n    this.setState({ searchTerm: e.target.name }, () => this.handleSubmit());\n  };\n\n  toggle = () => {\n    this.setState({\n      safeSearch: !this.state.safeSearch\n    });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          minHeight: \"100vh\",\n          minWidth: \"100vw\",\n          padding: \"2rem\"\n        }}\n      >\n        <Container>\n          <Header\n            as={\"h1\"}\n            color={\"orange\"}\n            textAlign={\"center\"}\n            style={{ fontFamily: \"Righteous, cursive\", fontSize: \"5rem\" }}\n          >\n            CZ PicSearch\n          </Header>\n          <Segment vertical>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Field width={16}>\n                <Form.Input\n                  fluid\n                  name=\"searchTerm\"\n                  error={this.state.inputError}\n                  onChange={this.handleChange}\n                  placeholder={\"Search for an image...\"}\n                  width={16}\n                  value={this.state.searchTerm}\n                />\n              </Form.Field>\n              <Form.Group inline width={16}>\n                <Form.Button fluid color={\"orange\"} onClick={this.handleSubmit}>\n                  Search\n                </Form.Button>\n                <Checkbox\n                  checked={this.state.safeSearch}\n                  label={\"Use SafeSearch\"}\n                  onChange={this.toggle}\n                />\n              </Form.Group>\n            </Form>\n                {this.state.inputError && <Message error>Please enter a search term</Message>}\n          </Segment>\n          {this.state.recentSearches.length > 0 && (\n            <Segment vertical>\n              <Header size={\"mini\"}>Last 10 Searches</Header>\n              <List horizontal>\n                {this.state.recentSearches.slice(0, 10).map((search, i) => {\n                  const search_term = search.search_term;\n                  return (\n                    <List.Item\n                      as={\"a\"}\n                      key={i}\n                      name={search_term}\n                      onClick={this.searchRecent}\n                      style={{ color: \"#f2711c\" }}\n                    >\n                      {search.search_term}\n                    </List.Item>\n                  );\n                })}\n              </List>\n            </Segment>\n          )}\n        </Container>\n        <Container>\n          {this.state.resultsReturned && (\n            <Segment vertical>\n              <Pagination\n                activePage={this.state.activePage}\n                firstPage={null}\n                lastPage={null}\n                onPageChange={this.paginate}\n                totalPages={this.state.numPages}\n              />\n            </Segment>\n          )}\n\n          <Loader active={this.state.isFetching} />\n          <Segment vertical>\n            {this.state.searchResults.length > 0 && (\n              <React.Fragment>\n                <Image.Group size=\"small\">\n                  {this.state.searchResults.map(result => (\n                    <SearchResult\n                      alt={result.alt}\n                      image={result.image}\n                      thumbnail={result.thumbnail}\n                      url={result.url}\n                    />\n                  ))}\n                </Image.Group>\n              </React.Fragment>\n            )}\n          </Segment>\n          {this.state.resultsReturned && (\n            <Segment vertical>\n              <Pagination\n                activePage={this.state.activePage}\n                firstItem={null}\n                lastItem={null}\n                onPageChange={this.paginate}\n                totalPages={this.state.numPages}\n              />\n            </Segment>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n{/*<Image*/}\n{/*  alt={result.alt}*/}\n{/*  as=\"a\"*/}\n{/*  bordered*/}\n{/*  href={result.url}*/}\n{/*  key={result.url}*/}\n{/*  rel=\"noopener noreferrer\"*/}\n{/*  src={result.thumbnail}*/}\n{/*  target={\"blank\"}*/}\n{/*  wrapped*/}\n{/*/>*/}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}